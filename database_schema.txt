-- This schema is designed for a PostgreSQL database, like the one provided by Supabase.
-- It outlines the tables needed to support the application's features.

-------------------------------------------
--              TABLES                   --
-------------------------------------------

-- Employees table
-- Stores all employee information.
CREATE TABLE employees (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  employee_id varchar(50) NOT NULL UNIQUE,
  full_name_ar varchar(255) NOT NULL,
  full_name_en varchar(255),
  job_title varchar(255) NOT NULL,
  department varchar(255) NOT NULL,
  center varchar(255),
  phone_direct varchar(50),
  email varchar(255),
  national_id varchar(50),
  nationality varchar(100),
  gender varchar(20),
  date_of_birth date,
  classification_id varchar(50),
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);
CREATE INDEX idx_employees_full_name_ar ON employees(full_name_ar);
CREATE INDEX idx_employees_department ON employees(department);


-- Office contacts table
-- Stores contact information for various offices/departments.
CREATE TABLE office_contacts (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(255) NOT NULL,
  extension varchar(20) NOT NULL,
  location varchar(255),
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);


-- Employee favorites table
-- Stores which employees are marked as favorites.
-- In a multi-user system, you would add a user_id column here.
CREATE TABLE employee_favorites (
  employee_id bigint NOT NULL,
  PRIMARY KEY (employee_id),
  FOREIGN KEY (employee_id) REFERENCES employees(id) ON DELETE CASCADE
);


-- Tasks table
-- Stores tasks and reminders.
CREATE TABLE tasks (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title text NOT NULL,
  description text,
  due_date date,
  is_completed boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);


-- Transactions table
-- Stores incoming and outgoing transactions/correspondence.
CREATE TABLE transactions (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  transaction_number text NOT NULL,
  subject text NOT NULL,
  type text NOT NULL, -- 'incoming' or 'outgoing'
  platform text NOT NULL, -- 'Bain', 'MinisterEmail', 'HospitalEmail'
  status text NOT NULL, -- 'new', 'inProgress', 'followedUp', 'completed'
  date date NOT NULL,
  description text,
  attachment jsonb, -- To store { name, type, data }
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);


-------------------------------------------
--        ROW LEVEL SECURITY (RLS)       --
-------------------------------------------
-- Supabase requires RLS to be enabled and policies to be set for data access.

-- Enable RLS for all tables
ALTER TABLE employees ENABLE ROW LEVEL SECURITY;
ALTER TABLE office_contacts ENABLE ROW LEVEL SECURITY;
ALTER TABLE employee_favorites ENABLE ROW LEVEL SECURITY;
ALTER TABLE tasks ENABLE ROW LEVEL SECURITY;
ALTER TABLE transactions ENABLE ROW LEVEL SECURITY;

-- Create policies for PUBLIC READ access
-- This allows anyone with the anon key to read data.
CREATE POLICY "Enable public read access" ON employees FOR SELECT USING (true);
CREATE POLICY "Enable public read access" ON office_contacts FOR SELECT USING (true);
CREATE POLICY "Enable public read access" ON employee_favorites FOR SELECT USING (true);
CREATE POLICY "Enable public read access" ON tasks FOR SELECT USING (true);
CREATE POLICY "Enable public read access" ON transactions FOR SELECT USING (true);

-- Create policies to allow all actions (insert, update, delete) for simplicity in this demo.
-- In a real application, you should restrict these based on user roles (e.g., auth.role() = 'authenticated').
CREATE POLICY "Enable all actions for public" ON employees FOR ALL USING (true);
CREATE POLICY "Enable all actions for public" ON office_contacts FOR ALL USING (true);
CREATE POLICY "Enable all actions for public" ON employee_favorites FOR ALL USING (true);
CREATE POLICY "Enable all actions for public" ON tasks FOR ALL USING (true);
CREATE POLICY "Enable all actions for public" ON transactions FOR ALL USING (true);
